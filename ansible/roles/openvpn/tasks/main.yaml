---
- name: Install required dependencies.
  ansible.builtin.apt:
    pkg:
      - openvpn
      - openssh-server
      - unzip
    state: latest
    update_cache: true

- name: Create the a folder for OpenVPN config scripts.
  ansible.builtin.file:
    path: "/etc/openvpn"
    state: directory
    owner: "root"
    group: "root"

- name: Write the OpenVPN config file.
  ansible.builtin.copy:
    content: "{{ homelab_openvpn_config_contents }}"
    dest: "{{ homelab_openvpn_config }}"
    owner: "root"
    group: "root"
    mode: '0600'
  register: openvpn_configs

- name: Create scripts and service files.
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "{{ item.mode | default('0600') }}"
  with_items:
    - src: "homelab_openvpn_authn.j2"
      dest: "/etc/openvpn/authn"
    - src: "homelab_openvpn_script_connect.j2"
      dest: "/etc/openvpn/connect.sh"
    - src: "homelab_openvpn_script_iptables.j2"
      dest: "/etc/openvpn/iptables.sh"
    - src: "homelab_openvpn_service_unit.j2"
      dest: "/etc/systemd/system/rc-local.service"
      mode: "0644"
    - src: "homelab_openvpn_service.j2"
      dest: "/etc/rc.local"
      mode: "0744"
  register: openvpn_scripts

- name: Enable port forwarding.
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true

- name: Enable the VPN service.
  ansible.builtin.systemd:
    name: "rc-local"
    state: started
    enabled: yes
  register: openvpn_service

- name: Reboot if necessary.
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible for VPN service change"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: (openvpn_configs is changed) or (openvpn_scripts is changed) or (openvpn_service is changed)
  
- name: Add a cron job to restart rc-local at midnight.
  cron:
    name: "Restart rc-local daily at midnight"
    minute: "0"
    hour: "0"
    user: root
    job: "systemctl restart rc-local"
    state: present
