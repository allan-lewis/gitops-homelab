---
# - name: Setup Plex.
#   hosts: homelab_plex_hosts
#   become: yes
#   gather_facts: yes
#   tags: [docker_plex]

#   roles:
#     - plex

# - name: Setup Jellyfin.
#   hosts: homelab_jellyfin_hosts
#   become: yes
#   gather_facts: yes
#   tags: [docker_jellyfin]

#   roles:
#     - jellyfin

- name: Setup Cloudflare Tunnel(s)
  hosts: homelab_docker_cloudflare_hosts
  become: true
  tags: [docker_cloudflare]
  roles:
    - role: docker_compose
      vars:
        compose_app_name: cloudflare
        compose_source_type: file
        compose_file_src: files/docker-compose/cloudflare.compose.yaml
        compose_env:
          CLOUDFLARE_TUNNEL_TOKEN: "{{ lookup('env','CLOUDFLARE_TUNNEL_TOKEN') }}"

- name: Setup Pi-Hole.
  hosts: homelab_docker_pihole_hosts
  become: yes
  gather_facts: yes
  tags: [docker_pihole]

  roles:
    - role: pihole_pre
    - role: docker_compose
      vars:    
        homelab_pihole_admin_password: "{{ lookup('env', 'PIHOLE_ADMIN_PASSWORD') }}"
        homelab_pihole_upstreams:
          - "1.1.1.1"
          - "1.0.0.1"
          - "9.9.9.9"
          - "149.112.112.112"
        compose_app_name: pihole
        compose_source_type: template
        compose_template_src: "templates/docker-compose/pihole.compose.yaml.j2"
        compose_paths:
          - path: "/var/lib/pihole"
            create: true
            mode: "0755"
    - role: pihole_post
    - role: pihole_dns

- name: setup media acquisition
  hosts: homelab_docker_media_acquisition_hosts
  become: yes
  gather_facts: yes
  tags: [docker_media_acquisition]

  roles:
    - role: docker_compose
      vars:
        compose_app_name: media_acquisition
        compose_source_type: file
        compose_file_src: files/docker-compose/media_acquisition.compose.yaml
        compose_paths:
          - path: "/etc/jackett"
            create: true
            uid: 1000
            gid: 1000
            mode: "0755"
          - path: "/etc/lidarr"
            create: true
            uid: 1000
            gid: 1000
            mode: "0755"
          - path: "/etc/radarr"
            create: true
            uid: 1000
            gid: 1000
            mode: "0755"
          - path: "/etc/sonarr"
            create: true
            uid: 1000
            gid: 1000
            mode: "0755"
          - path: "/etc/transmission"
            create: true
            uid: 1000
            gid: 1000
            mode: "0755"
          - path: "/var/lib/jackett/downloads"
            create: true
            uid: 1000
            gid: 1000
            mode: "0755"
          - path: "/var/lib/transmission/watch"
            create: true
            uid: 1000
            gid: 1000
            mode: "0755"
          - path: "/mnt/media-acquisition"
            create: true
            mode: "0755"
            nfs: true
            nfs_server: "{{ hostvars['procyon'].ansible_host }}"
            nfs_path: "/mnt/pool1/media-acquisition"
            nfs_opts: "rw,sync,hard,intr"

- hosts: castor
  become: yes
  gather_facts: yes
  tags: [backup_runner]

  roles:
    - backup_runner 