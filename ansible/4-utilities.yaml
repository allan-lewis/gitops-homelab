---
- name: gracefully shut down ubuntu hosts
  hosts: ubuntu
  become: true
  gather_facts: false
  tags: [ubuntu_shutdown]

  vars_prompt:
    - name: ubuntu_confirm
      prompt: "type 'yes' to confirm shutdown of all ubuntu hosts"
      private: no

  pre_tasks:
    - name: abort if confirmation was not 'yes'
      ansible.builtin.fail:
        msg: "Shutdown aborted â€” you must type 'yes' to proceed."
      when: ubuntu_confirm != "yes"

  tasks:
    - name: shut down with a delay and custom message
      community.general.shutdown:
        delay: 300
        msg: "System will shut down in 5 minutes (initiated by Ansible). Please save your work."

- name: gracefully cordon and shut down talos nodes
  hosts: localhost
  gather_facts: no
  become: no
  tags: [talos_shutdown]

  roles:
    - role: talos_shutdown
      vars:
        talos_target_group: "{{ groups['talos_workers'] | default([]) }}"
      when: (groups['talos_workers'] | default([])) | length > 0
    - role: talos_shutdown
      vars:
        talos_target_group: "{{ groups['talos_controlplanes'] | default([]) }}"
      when: (groups['talos_controlplanes'] | default([])) | length > 0

- name: extract output variables from terraform and configure kubectl and talosctl
  hosts: localhost
  become: no
  gather_facts: yes
  tags: [terraform_output]

  roles:
    - terraform_output

- name: backup aws s3 buckets
  hosts: localhost
  gather_facts: no
  become: no
  tags: [s3_backup]

  roles:
    - role: known_hosts
      vars:
        homelab_ansible_translate_ip: false
        homelab_ssh_keys: [ "{{ s3_backup_remote_host_ip | mandatory('Set s3_backup_remote_host_ip') }}" ]
    - role: s3_backup
