kubeScheduler:
  enabled: false

kubeControllerManager:
  enabled: false

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubeControllerManager: false
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true

crds:
  enabled: false
  upgradeJob:
    enabled: false

prometheus:    
  prometheusSpec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          resources:
            requests:
              storage: 32Gi

grafana:
  persistence:
    enabled: true
    type: pvc
    existingClaim: grafana

alertmanager:
  alertmanagerSpec:
    alertmanagerConfigSelector:
      matchLabels:
        alertmanager: config
    containers:
      - name: alertmanager
        volumeMounts:
          - name: telegram-secret
            mountPath: /etc/secrets/telegram
            readOnly: true
    volumes:
      - name: telegram-secret
        secret:
          secretName: telegram-bot-token-secret
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    storage: 
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    config:
      global:
        resolve_timeout: 5m
      route:
        receiver: "telegram"
        group_by: ["alertname"]
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
      receivers:
        - name: "telegram"
          telegram_configs:
            - bot_token_file: /etc/secrets/telegram/bot_token
              chat_id_file: /etc/secrets/telegram/chat_id
              message: "An alert has fired: {{ .CommonAnnotations.summary }}"
              parse_mode: "Markdown"
