---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: lidarr
  namespace: media
  labels:
    app: lidarr
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: lidarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lidarr
        app: lidarr
    spec:
      containers:
      - name: lidarr
        image: "lscr.io/linuxserver/lidarr:latest"
        imagePullPolicy: "Always"
        env:
        volumeMounts:
          - mountPath: /config
            name: lidarr-config
          - mountPath: /downloads
            name: media-downloads
          - mountPath: /music
            name: lidarr-music
      volumes:
        - name: lidarr-config
          persistentVolumeClaim:
            claimName: lidarr-config
        - name: media-downloads
          persistentVolumeClaim:
            claimName: downloads-pvc
        - name: lidarr-music
          persistentVolumeClaim:
            claimName: music-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: lidarr
  namespace: media
spec:
  selector:
    app: lidarr
  ports:
  - name: http
    targetPort: 8686
    port: 8686
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: radarr
  namespace: media
  labels:
    app: radarr
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr
        app: radarr
    spec:
      containers:
      - name: radarr
        image: "lscr.io/linuxserver/radarr:latest"
        imagePullPolicy: "Always"
        env:
        volumeMounts:
          - mountPath: /config
            name: radarr-config
          - mountPath: /downloads
            name: media-downloads
          - mountPath: /movies
            name: radarr-movies
      volumes:
        - name: radarr-config
          persistentVolumeClaim:
            claimName: radarr-config
        - name: media-downloads
          persistentVolumeClaim:
            claimName: downloads-pvc
        - name: radarr-movies
          persistentVolumeClaim:
            claimName: movies-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: media
spec:
  selector:
    app: radarr
  ports:
  - name: http
    targetPort: 7878
    port: 7878
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: "lscr.io/linuxserver/sonarr:latest"
        imagePullPolicy: "Always"
        env:
        volumeMounts:
          - mountPath: /config
            name: sonarr-config
          - mountPath: /downloads
            name: media-downloads
          - mountPath: /tv
            name: sonarr-tv
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: media-downloads
          persistentVolumeClaim:
            claimName: downloads-pvc
        - name: sonarr-tv
          persistentVolumeClaim:
            claimName: tv-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: media
spec:
  selector:
    app: sonarr
  ports:
  - name: http
    targetPort: 8989
    port: 8989
