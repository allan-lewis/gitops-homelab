---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
secrets:
  - name: homepage
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    kubernetes.io/service-account.name: homepage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
data:
  kubernetes.yaml: |
    mode: cluster
  settings.yaml: |
    title: "Allan's Home Lab"
    headerStyle: clean
    useEqualHeights: true
    layout:
      Hosts:
        style: "row"
        columns: 4
      GitOps:
        style: "row"
        columns: 2
    theme: "dark"
    color: "slate"
  custom.css: ""
  custom.js: ""
  bookmarks.yaml: |
# {% for group in  (homelab_k8s_homepage_bookmark_groups | default([])) %}
#     - {{ group.name }}:
# {% for bookmark in group.bookmarks | default([]) %}
#         - {{ bookmark.name }}:
#            - abbr: {{ bookmark.abbr }}
#              href: {{ bookmark.href }}
# {% endfor %}
# {% endfor %}
  services.yaml: |
    - Hosts:
        - Polaris:
            icon: proxmox.png
            href: https://polaris.hosts.allanshomelab.com
            description: Hypervisor
            namespace:
            app:
            server:
            container:
            widget:
              type: proxmox
              url: https://polaris.hosts.allanshomelab.com
              username: {{HOMEPAGE_VAR_POLARIS_USERNAME}}
              password: {{ HOMEPAGE_VAR_POLARIS_PASSWORD}}
              key:
              accountid:
              tunnelid:
              fields: ['vms', 'resources.cpu', 'resources.mem']
# - Argo CD:
#     icon: "argo-cd.png"
#     href: "https://gitops.allanshomelab.com"
#     description: "Gitops CD Tool for Kubernetes"
#     namespace: argocd
#     app: argocd-server
#     widget:
#       type: argocd
#       url: https://argocd.nonprod.allanshomelab.com
#       key: "{{HOMEPAGE_VAR_ARGO_CD_KEY}}"
# {% for group in  (homelab_k8s_homepage_service_groups | default([])) %}
#     - {{ group.name }}:
# {% for service in group.services | default([]) %}
#         - {{ service.name }}:
#             icon: {{ service.icon | default('') }}
#             href: {{ service.href }}
#             description: {{ service.description }}
#             namespace: {{ service.namespace | default('') }}
#             app: {{ service.app | default('') }}
#             server: {{ service.server | default('') }}
#             container: {{ service.container | default('') }}
# {% if service.podSelector is defined %}
#             podSelector: {{ service.podSelector | default('') }}
# {% endif %}
# {% if service.widget is defined %}
#             widget:
#               type: {{ service.widget.type }}
#               url: {{ service.widget.url | default('') }}
#               username: {{ service.widget.username | default('') }}
#               password: {{ service.widget.password | default('') }}
#               key: {{ service.widget.key | default('') }}
#               accountid: {{ service.widget.accountid | default('') }}
#               tunnelid: {{ service.widget.tunnelid | default('') }}
# {% if service.widget.fields is defined %}
#               fields: {{ service.widget.fields }}
# {% endif %}
# {% if service.widget.version is defined %}
#               version: {{ service.widget.version }}
# {% endif %}
# {% endif %}
# {% endfor %}
# {% endfor %}
  widgets.yaml: |
    - greeting:
        text_size: xl
        text: "Allan's Home Lab"
    - datetime:
        text_size: xl
        format:
          dateStyle: full
          timeStyle: short
          hour12: false
  docker.yaml: |
# {%for docker_node in groups['homelab_docker_nodes'] %}
#     {{ docker_node }}:
#       host: {{ hostvars[docker_node].ansible_host  }}
#       port: {{ homelab_ports.docker_proxy }}
# {% endfor %}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.containo.us
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions/status
    verbs:
      - get
  - apiGroups:
      - traefik.io
    resources:
      - ingressroutes
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: homepage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      serviceAccountName: homepage
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - name: copy-config-to-emptydir
          image: busybox  # or any other lightweight image with basic tools
          command: ["sh", "-c", "cp /app/staging/services.yaml /app/config/services.yaml"]
          volumeMounts:
            - name: homepage-config
              mountPath: /app/staging
            - name: homepage-storage
              mountPath: /app/config
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:v0.10.9"
          imagePullPolicy: Always
          envFrom:
          - secretRef:
              name: homepage-secrets
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: LOG_LEVEL
              value: debug
          volumeMounts:
            - mountPath: /app/config
              name: homepage-storage
            - mountPath: /staging/config/custom.js
              name: homepage-config
              subPath: custom.js
            - mountPath: /staging/config/custom.css
              name: homepage-config
              subPath: custom.css
            - mountPath: /staging/config/bookmarks.yaml
              name: homepage-config
              subPath: bookmarks.yaml
            - mountPath: /staging/config/docker.yaml
              name: homepage-config
              subPath: docker.yaml
            - mountPath: /staging/config/kubernetes.yaml
              name: homepage-config
              subPath: kubernetes.yaml
            - mountPath: /staging/config/services.yaml
              name: homepage-config
              subPath: services.yaml
            - mountPath: /staging/config/settings.yaml
              name: homepage-config
              subPath: settings.yaml
            - mountPath: /staging/config/widgets.yaml
              name: homepage-config
              subPath: widgets.yaml
            - mountPath: /app/config/logs
              name: logs
      volumes:
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs
          emptyDir: {}
        - name: homepage-storage
          emptyDir: {}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:  
  name: homepage-external-secret
  namespace: default
spec:  
  secretStoreRef:    
    kind: ClusterSecretStore    
    name: doppler-secret-store
  target:    
    name: homepage-secrets
  data:
    - secretKey: HOMEPAGE_VAR_ARGO_CD_KEY      
      remoteRef:        
        key: HOMEPAGE_VAR_ARGO_CD_KEY
    - secretKey: HOMEPAGE_VAR_POLARIS_USERNAME      
      remoteRef:        
        key: HOMEPAGE_VAR_POLARIS_USERNAME
    - secretKey: HOMEPAGE_VAR_POLARIS_PASSWORD      
      remoteRef:        
        key: HOMEPAGE_VAR_POLARIS_PASSWORD
